{"version":3,"sources":["Components/Faq/Faq.js","faqDatas.js","Components/Faq/FaqContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Faq","props","useState","toggle","setToggle","className","onClick","e","preventDefault","question","answer","faqDatas","id","FaqContainer","faqComponent","map","data","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAkBeA,EAhBH,SAACC,GAAW,IAAD,EACOC,oBAAS,GADhB,mBACdC,EADc,KACNC,EADM,KAQrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAS,mBAAcF,EAAS,SAAW,UAAYG,QAP5C,SAACC,GACnBA,EAAEC,iBACFJ,GAAWD,IAKT,SAAkF,+BAAOF,EAAMQ,aAC/F,qBAAKJ,UAAS,iBAAYF,EAAS,SAAW,UAA9C,SAA0D,+BAAOF,EAAMS,eCe9DC,EA5BE,CACb,CACIC,GAAI,IACJH,SAAU,sCACVC,OAAQ,6DAEZ,CACIE,GAAI,IACJH,SAAU,wCACVC,OAAQ,qFAEZ,CACIE,GAAI,IACJH,SAAU,8BACVC,OAAQ,qJAEZ,CACIE,GAAI,IACJH,SAAU,gCACVC,OAAQ,kFAEZ,CACIE,GAAI,IACJH,SAAU,qCACVC,OAAQ,iGCADG,EAnBM,WACnB,IAAMC,EAAeH,EAASI,KAAI,SAACC,EAAKC,GACtC,OACE,cAAC,EAAD,CAAmBR,SAAUO,EAAKP,SAAUC,OAAQM,EAAKN,QAA/CM,EAAKJ,OAGnB,OACE,qBAAKP,UAAU,eAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,aAAf,SAA4B,qBAAKA,UAAU,UAC3C,sBAAKA,UAAU,iBAAf,UACE,qCACCS,WCNAI,EARH,WACV,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCMSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6306f41b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Faq = (props) => {\n  const [toggle, setToggle] = useState(false);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    setToggle(!toggle);\n  }\n\n  return(\n    <div className=\"QuestionAnswer\">\n      <div className={`Question ${toggle ? 'hidden' : 'active'}`} onClick={handleClick}><span>{props.question}</span></div>\n      <div className={`Answer ${toggle ? 'active' : 'hidden'}`}><span>{props.answer}</span></div>\n    </div>\n  )\n}\n\nexport default Faq;","const faqDatas = [\n    {\n        id: \"1\",\n        question: \"How many team members can I invite?\",\n        answer: \"You can invite up to 2 additional users on the Free plan.\",\n    },\n    {\n        id: \"2\",\n        question: \"What is the maximum file upload size?\",\n        answer: \"No more than 2GB. All files in your account must fit your allotted storage space.\",\n    },\n    {\n        id: \"3\",\n        question: \"How do I reset my password?\",\n        answer: \"Click “Forgot password” from the login page or “Change password” from your profile page. A reset link will be emailed to you.\",\n    },\n    {\n        id: \"4\",\n        question: \"Can I cancel my subscription?\",\n        answer: \"Yes! Send us a message and we’ll process your request no questions asked.\",\n    },\n    {\n        id: \"5\",\n        question: \"Do you provide additional support?\",\n        answer: \"Chat and email support is available 24/7. Phone lines are open during normal business hours.\",\n    },\n  ];\n\nexport default faqDatas","import React from 'react';\nimport './Faq.scss';\nimport Faq from \"./Faq\";\nimport faqDatas from '../../faqDatas';\n\nconst FaqContainer = () => {\n  const faqComponent = faqDatas.map((data,index) => {\n    return (\n      <Faq key={data.id} question={data.question} answer={data.answer} />\n    )\n  })\n  return (\n    <div className=\"FaqContainer\">\n        <div className=\"Row\">\n            <div className=\"Column Img\"><div className=\"Img\"></div></div>\n            <div className=\"Column Content\">\n              <h1>Faq</h1>\n              {faqComponent}\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default FaqContainer;\n","import './App.scss';\nimport FaqContainer from \"./Components/Faq/FaqContainer\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <FaqContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}